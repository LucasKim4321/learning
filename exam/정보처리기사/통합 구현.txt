https://pleasefixthebug.tistory.com/entry/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC-%EC%8B%A4%EA%B8%B0-%EB%82%B4%EC%9A%A9%EC%A0%95%EB%A6%AC-04-%ED%86%B5%ED%95%A9-%EA%B5%AC%ED%98%84


* 통합 구현 : 사용자의 요구사항을 해결하고, 새로운 서비스 창출을 위해 단위 기능을 하는 모듈 간의 연계와 통합
* 통합 구현은 시스템 아키텍처 구성, 송수신 방식, 송수신 모듈 구현 방법 등에 따라 다양하므로 구축하고자 하는 환경과 사용자 요구사항에 따라 적합한 통합 구현 방법을 설계한다.

연계 요구사항 분석
* 연계 요구사항 분석 : 서로 다른 두 시스템. 장치. 소프트웨어를 이어주는 중계 역할을 하는 연계 시스템과 관련된 요구사항을 분석하는 과정

* 분석 기법
- 인터뷰, 리서치
- 체크리스트 : 시스템 운영환경, 성능, 보안 데이터 주기 등 기준에 대한 점검을 통한 분석 기법
- 델파이 기법 : 통합 구현 및 연계 전문가, 시스템 아키텍처, 업무 전문가 등 각 분야 전문가로부터 연계 데이터 및 사용자 요구사항 식별
- 브레인스토밍 : 소속된 인원들이 자연스럽게 제시된 아이디어 목록을 통해 분석

* 연계 요구사항을 분석 참고 문서
- 개체( Entity ) 정의서 : 데이터베이스 개념 모델링 단계에서 도출한 개체의 타입과 관련 속성, 식별자 등의 정보를 개괄적으로 명세화한 정의서
- 테이블( Table ) 정의서 : 논리 및 물리 모델링 과정 설계 산출물, 테이블을 구성하는 칼럼의 특성 및 인덱스를 문서화
- 인터페이스 명세서 : 인터페이스 정의서에 작성한 항목을 자세히 작성한 것
- 송신시스템과 수신 시스템 간의 인터 페이스 방식, 주기, 기록, 데이터 크기, 인터페이스 ID 등 기술
* 연계 시스템 구성 : 송신 시스템, 수신 시스템, 중계 서버
* 인터페이스 시스템의 데이터 표준 : 공통부, 개별부, 종료부



연계 메커니즘 구성
* 연계 메커니즘 : 응용 소프트웨어와 연계 대상 모듈 간의 데이터 연계 시 요구사항을 고려한 연계방법과 주기를 설계하기 위한 메커니즘
- 기능 : 데이터를 생성하여 전송하는 송신 시스템과 송신 데이터를 수신하여 DB에 반영하는 수신 시스템으로 구성
* 주요 연계 기술
- 직접 연계 : 중간 매개체 없이 송수신 시스템 연결
+ DB 링크 : 데이터 베이스에서 제공하는 DB 링크 객체를 이용
+ DB 연결 : 수신 시스템의 WAS에서 송신 시스템 DB로 연결하는 DB 커넥션 풀을 생성하고 연계 프로그램에서 해당 DB 커넥션 풀 명을 이용하여 연결
+ API/Open API : 송신 시스템의 DB에서 데이터를 읽어서 제공하는 애플리케이션 프로그래밍 인터페이스 프로그램
+ JDBC : 수신 시스템의 프로그램에서 JDBC 드라이버를 이용하여 송신 시스템 DB와 연결
+ 하이퍼링크 : 현재 페이지에서 다른 부분으로 가거나 전혀 다른 페이지로 이동하게 해주는 속성
- 간접 연계 : 중간 매개체를 통한 연계
+ 연계 솔루션 (EAI) : 기업에서 운영되는 서로 다른 플랫폼 및 애플리케이션들 간의 정보 전달, 연계, 통합을 가능하게 해주는 솔루션
+ Web Service/ESB : 웹 서비스가 설명된 WSDL과 SOAP 프로토콜을 이용한 시스템 간 연계
+ 소켓(Socket) : 소켓을 생성하여 포트를 할당하고, 클라이언트의 요청을 연결하여 통신

* 연계 메커니즘 주행 절차
연계 데이터 추출 생성 -> 코드 매핑/변환 -> 파일 생성 -> 로그 기록 -> 송수신 어댑터 -> 전송 -> 반영


내외부 연계 모듈 구현
* EAI ( Enterprise Application Intergration) : 기업에서 운영되는 서로 다른 플랫폼 및 애플리케이션 간의 정보를 전달, 연계 통합이 가능하도록 해주는 솔루션
- 미들웨어를 이용하여 비즈니스 로직을 중심으로 기업 내 애플리케이션을 통합 연계
- 구성도 : APP
* EAI 구성요소
- EAI 플랫폼 : 이기종 시스템 간 애플리케이션 상호 운영
- 어댑터 : 다양한 애플리케이션을 연결하는 EAI의 핵심 장치로 데이터 입출력 도구
- 브로커 : 데이터 포맷과 코드를 변환하는 솔루션
- 메시지 큐 : 비동기 메시지를 사용하는 다른 응용 프로그램 사이에서 데이터를 송수신하는 기술
- 비즈니스 워크플로우 : 미리 정의된 기업의 비즈니스 workflow에 따라 업무를 처리하는 기능 * EAI 구축 유형
- 포인트 투 포인트 ( Point-To-Point) : 가장 기초적인 애플리케이션 통합 방법. 1:1 단순 통합 방법
- 허브 앤 스포크 (Hub & Spoke) : 단일한 접점의 허브 시스템을 통하여 데이터를 전송하는 중앙 집중식 방식
- 메시지 버스 (Message Bus) : 애플리케이션 사이 미들웨어를 두어 연계하여 미들 웨어 통합방식
- 하이브리드 (Hybrid) : 그룹 내는 허브 앤 스포크 방식을 사용, 그룹 간에는 메시지 버스 방식을 사용하는 통합 방식
* ESB(Enterprise Service Bus): 기업에서 운영되는 서로 다른 플랫폼 및 애플리케이션들 간을 하나의 시스템으로 관리 운영할 수 있도록 서비스 중심의 통합을 지향하는 아키텍처. 느슨한 결합 방식 지원 (서비스 번경이 있어도 연결된 다른 서비스에 영향이 없음)
- 미들웨어를 이용하여 서비스 중심으로 서비스를 지원하기 위한 관련 시스템과 유기적 연계
- 느슨한 결합 : 특정 서비스를 변경해도 연결된 다른 서비스에 영향을 주지 않는 구조
- 개발자가 서비스를 개발하고 적절한 API를 통해 서비스 간에 통신을 하는데 도움이 되는 인프라 스트럭쳐 소프트웨어
* ESB 구축 유형 : 버스 방식의 분산형 토폴로지 구성
* 웹 서비스(Web Service) : 네트워크에 분산된 정보를 서비스 형태로 개방하여 표준화된 방식으로 공유하는 기술, 서비스 지향 아키텍처
* 웹 서비스 유형
- SOAP(Simple Object Access Protocol) : HTTP, HTTPS, SMTP 등을 사용하여 XML 기반의 메시지를 네트워크 상태에서 교환하는 프로토콜, 무거운 구조라 RESTful 프로토콜을 이용하기도 한다.
- WSDL(Web Service Description Language) : 웹 서비스명, 제고 위치, 메시지 포맷, 프로토콜 정보 등 웹 서비스에 대한 상세 정보가 기술된 XML 형식으로 구현되어 있는 언어
- UDDI(Universal Description, Discovery and Intergration) : 웹서비스에 대한 정보인 WSDL을 등록하고 검색하기 위한 저장소로 공개적으로 접근, 검색이 가능한 레지스트

* XML : HTML 문법이 호환되지 않는 문제와 SGML의 복잡함을 해결하기 위해 고안된 마크업 언어
* JSON : 비동기 브라우저, 서버 통신을 위해 '속성-값'의 쌍으로 이루어진 개방형 표준 포맷
* AJAX : JavaScript를 이용한 비동기 통신으로 클라이언트와 서버 간 XML 데이터를 주고받는 기술
* REST : URL을 통해 자원을 명시하고 HTTP메서드를 통해 해당 자원을 조작할 수 있는 기법
* 테스트 케이스 : 명세 기반 테스트의 산출물로 입력값, 실행 조건, 기대 결과로 구성된 테스트 항목 * IPC(Inter-Process Communication) : 운영체제에서 프로세스 간 서로 데이터를 주고받기 위한 통신 기술
* 연계 테스트: 송신 시스템과 수신 시스템을 연계하였을 경우 데이터의 정합성과 데이터 전송 여부에 대한 테스트



연계 데이터 보안 적용
* 송신 시스템에서 수신 시스템으로 전송되는 연계 데이터는 보안에 취약할 수 있으므로 데이터의 중요성을 고려하여 보안을 적용해야 한다.
* 암호화 알고리즘 : 정보를 보호하기 위해 평문을 암호화된 문장으로 만드는 절차 또는 방법을 의미한다.
- 해시(Hash)를 사용하는 단방향 암호화 방식과 개인키 및 공개키로 분류되는 양방향 암호화 방식이 있으며, 송수신 시스템 연계 시 일반적으로 양방향 암호화 방식을 사용한다.
- 양방향 암호화 방식에서 사용되는 주요 암호화 알고리즘에는 SEED, ARIA, DES, AES, RSA 등이 있다.
* 암·복호화 적용
- 송수신 시스템의 연계 응용프로그램 구현 시 암복호화 적용 절차
+ 암호화 적용대상, 암호화 알고리즘, 암호화 키 선정
+ 암호화 적용 대산 컬럼의 데이터 길이 변경
+ 암호화 알고리즘 라이브러리 확보 및 설치
+ 연계 응용 프로그램에서 암복호화 처리 수행


통합 구현

출처: https://edder773.tistory.com/183 [개발하는 차리의 학습 일기:티스토리]

송수신 모듈과 중계 모듈 간의 연계를 구현하는 것
구성요소

송신 시스템과 모듈

송신 시스템 : 데이터를 생성 및 변환하여 전송하는 시스템으로, 송신 모듈과 모니터링 기능으로 구성
송신 모듈 : 전송 데이터를 생성하고 필요에 따라 전송 데이터의 변환 등을 수행함


수신 시스템과 모듈

수신 시스템 : 수신받은 데이터를 정제 및 변환하는 시스템으로, 수신 모듈과 모니터링 기능으로 구성
수신 모듈 : 수신 데이터를 정제하고 애플리케이션이나 데이터베이스(DB) 테이블에 적합한 데이터로 변환하는 작업 등을 수행


중계 시스템 : 내외부 시스템 간 또는 내부 시스템 간의 연계 시 사용되는 아키텍처
연계 데이터 : 송수신 시스템 간 송수신되는 데이터
네트워크 : 송신 시스템, 수신 시스템, 중계 시스템을 연결해 주는 통신망

연계 요구사항 분석

연계 데이터를 식별 및 표준화하여 연계 데이터를 정의하는 것
하드웨어 및 소프트웨어 구성, 네트워크 현황 확인 → 테이블 정의서, 코드 정의서 등의 문서 확인 → 체크리스트 작성 → 관련 문서 공유 및 인터뷰, 설문 조사 실시 → 요구사항 정의서 작성

연계 데이터 식별 및 표준화의 절차

연계 범위 및 항목 정의 : 시스템 간 연계할 정보를 상세화하여 정의
연계 코드 변환 및 매핑 : 연계 정보 중 코드로 관리되어야 할 항목을 찾아 코드로 변환
연계 데이터 식별자와 변경 구분 추가 : 연계 정보에 데이터 구분 식별자, 직업 구분 정보, 테이블, 파일 관리 정보 등 추가
연계 데이터 표현 방법 정의 : 연계 대상 범위, 대상 항목, 코드 변환 방식, 매핑 방식을 정의한 후 연계 데이터 구성
연계 정의서 및 명세서 작성 : 이전 과정에서 정의된 다양한 항목들과 파악된 현황들을 문서화

연계 메커니즘

직접 연계 방식 : 중간 매개체 없이 송수신 시스템이 직접 연계하는 방식(DB link, API, Open API 등)
간접 연계 방식 : 송수신 시스템 사이에 중간 매개체를 두어 연계하는 방식 (연계 솔루션, EBS, 소켓, 웹서비스 등)

연계 메커니즘의 구성

연계 데이터 생성 및 추출 : 연계 솔루션과 관계없이 응용 시스템에서 연계 데이터를 생성하고 추출하는 과정
코드 매핑 및 데이터 변환 : 송신 시스템에서 사용하는 코드를 수신 시스템에서 사용하는 코드로 매핑 및 변환하는 과정
인터페이스 테이블 또는 파일 생성 : 연계 데이터를 인터페이스 테이블이나 파일 형식으로 생성하는 과정
로그 기록 : 송수신 시스템에서 수행되는 모든 과정에 관한 결과 및 오류에 대한 정보를 로그 테이블이나 파일에 기록하는 과정
연계 서비 또는 송수신 어댑터

연계 서버 : 데이터를 전송 형식에 맞게 변환하고 송수신을 수행하는 등 송수신과 관련된 모든 처리 수행
송신 어댑터 : 인터페이스 테이블 또는 파일의 데이터를 전송 형식에 맞도록 변환 및 송신 수행
수신 어댑터 : 수신 데이터를 인터페이스 테이블이나 파일로 생성


전송 : 송신 시스템에서 생성된 연계 데이터를 네트워크 환경에 맞는 데이터로 변환한 수 수신 시스템으로 보내는 것
운영 DB에 연계 데이터 반영 : 수신된 인터페이스 테이블 또는 파일 구조의 데이터를 변환 프로그램을 이용하여 수신 시스템의 운영 DB에 반영하는 과정


구간별 주요 오류 발생 시스템

송신 시스템

데이터 생성 및 추출 시
코드 매핑 및 데이터 변환 시
인터페이스 테이블 또는 파일 등록 시


수신 시스템

연계 데이터 로드 시
코드 매핑 및 데이터 변환 시
운영 DB에 반영 시


연계 서버

연계 데이터 로드 및 전송 형식으로 변환 시
연계 데이터 송수신 시
수신 시스템의 데이터 형식으로 변환 및 로드



장애 및 오류 정의 및 설계

장애 및 오류 관리 대상 : 송수신 시스템의 연계 프로그램에서 관리하는 장애 및 오류를 관리 대상으로 정의
관리 대상의 장애 및 오류 코드와 메시지 : 관리 대상에서 식별한 오류 내용을 주제별로 분류한 후 각 오류 내용에 오류 코드를 부여하고 오류 메시지를 정의
장애 및 오류 코드와 메시지 관리 방식 : 관리 대상, 오류 코드와 오류 메시지가 많은 경우에는 테이블 관리 방식을, 적은 경우에는 파일 관리 방식 선택
장애 및 오류 기록 방식 : 오류 로그 테이블이나 파일은 기록 단위에 따라 인터페이스 테이블이나 파일에 대한 로그, 연계 데이터에 대한 로그 설계

전송 구간 보안

전송되는 데이터나 패킷을 쉽게 가로챌 수 없도록 암호화 기능이 포함된 프로토콜 사용
데이터나 패킷을 가로채더라도 내용을 확인할 수 없게 데이터나 패킷을 암호화

데이터 보안

송신 시스템

DB에서 연계 데이터 추출
보안 적용 대상 칼럼을 암호화
연계 데이터를 인터페이스 테이블 또는 파일에 등록 및 송신


수신 시스템

수신된 데이터 중 암호화한 칼럼을 복호화
운영 DB에 반영


암 · 복호화 적용 절차

암호화 적용 대상, 암호화 알고리즘, 암호화 키 선정
암호화 적용 대상 칼럼의 데이터 길이 변경
암호화 알고리즘 라이브러리 확보 및 절차
연계 응용 프로그램에서 암 · 복호화 처리 수행



XML

특수한 목적을 갖는 마크업 언어를 만드는 데 사용되는 다목적 마크업 언어
웹브라우저 간 HTML 문법이 호환되지 않는 문제와 SGML의 복잡함을 해결하기 위해 개발
사용자가 직접 무서의 태그를 정의할 수 있으며, 다른 사용자가 정의한 태그 사용 가능

SOAP(Simple Object Access Protocool)

네트워크 상에서 HTTP/HTTPS, SMTP 등을 이용하여 XML을 교환하기 위한 통신 규약
기본적으로 HTTP 기반에서 동작하기 때문에 프록시와 방화벽의 영향 없이 통신 가능

WSDL

웹 서비스와 관련된 서식이나 프로토콜 등을 표준적인 방법으로 기술하고 게시하기 위한 언어
XML로 작성되며, UDDI의 기초

연계 테스트

연계 시스템과 연계 시스템의 구성 요소가 정상적으로 동작하는 확인하는 활동
연계테스트 진행 순서

연계 테스트 케이스 작성 : 연계 시스템 간의 데이터 및 프로세스의 흐름을 분석하여 필요한 테스트 항목을 도출
연계 테스트 환경 구축 : 테스트의 일정, 방법, 절차, 소요 시간 등을 송수신 기관과의 협의를 통해 결정
연계 테스트 수행 : 연계 응용 프로그램을 실행하여 연계 테스트 케이스의 시험 항목 및 처리 절차 등을 실제로 진행
연계 테스트 케이스의 시험 항목 및 처리 절차를 수행한 결과가 예상 결과와 동일한지 확인
