intellij setting

utf-8 check
Editor-> File Encodings -> utf-8

build->compiler->annotation processors
enable annotation processing

이 설정 뭔가 문제있음 기본값 gradle로
build->buildTools->gradle 
build and run using intellij IDEA
run tests using intellij IDEA

Editor-> Code Completion -> Match Case  uncheck

gradle사용

프로젝트 설정
------------------application.properties-------------------
spring.application.name=MyProject

# web 서버 설정
server.port=9090
server.servlet.encoding.charset=UTF-8
#server.servlet.context-path=/

#----------DB 설정------------# Mariadb 사용할 경우
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/shopdb
spring.datasource.username=root
spring.datasource.password=3690
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# H2 DB 사용할 경우
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:test
#spring.datasource.username=sa
#spring.datasource.password=

#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#@GeneratedValue(strategy=GenerationType.AUTO)

#-------------db 실행시 로그----------------
# 실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true
# 콘솔 창에 출력되는 쿼리를 가독성 있게 들여쓰기 하여 표시
spring.jpa.properties.hibernate.format_sql=true
#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

spring.jpa.hibernate.ddl-auto=create

#none: 사용하지 않음
#validate: 엔티티와 테이블 정상 매핑 확인

#create: 기존 테이블 삭제 후 테이블 생성
#create-drop: 기존 테이블 삭제 테이블 생성. 종료 시점에 테이블 삭제
#update: 변경된 스키마 적용

#-------------------------------------------

#log 레벨 설정
logging.level.org.SpringFramework=info
logging.level.org.com.spring.shop=debug
-----------------------------------------------------------

H2 test서버랑 충돌일어남



package com.springboot.myshop.controller;


import lombok.extern.log4j.Log4j2;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
@Log4j2
public class TestController {
    @GetMapping("/hello")
    public void hello(Model model) {
        log.info("hello~");
        model.addAttribute("msg", "Hello World ~");

    }
}





//1. QueryDsl
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}


	// 2. QueryDsl 관련 라이브러리
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

// 3. QueryDsl
sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}
compileJava.dependsOn('clean')


도메인 생성

우측 gradle아이콘(코끼리)
other -> compileJava 실행
entity를 복사해서 Q엔티티로 만들어줌 (build->generated->sources->내프로젝트entity경로이름폴더->Q엔티티)

build -> clean 실행 (초기화)  build폴더 사라짐

오류 발생
JPA queryDSL error => "Attempt to recreate a file" 도메인 중복 발생
IntelliJ -> Gradle 변환 or
Gradle -> IntelliJ 변환

하다가 잘 안되면 clean으로 초기화 후 재생성



