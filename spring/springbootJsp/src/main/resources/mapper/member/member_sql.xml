<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "HTTP://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 작업공간 MemberXmlSQLMapperInterface -->
<mapper namespace="com.spring.springbootJsp.member.mapper.MemberXmlSQLMapperInterface">
	<!-- id호출 받을 이름 resultType 리턴 자료형 -->
	<select id="getTime" resultType="String"> <!-- getTime호출 시 실행 -->
		<!-- oracle -->
		select sysdate from dual
		<!-- mariadb: select now() from dual -->
	</select>
	
	<!-- 회원 목록 -->
	<!-- resource폴더에 있는 mybatis-config.xml에서 typeAlias태그로 별칭을 설정했을 경우 -->
	<!-- application.properties에서mybatis.type-aliases-package=경로를 성정했을 경우 -->
	<select id="getMemberList" resultType="MemberVO"> <!-- getMemberList 호출 시 실행 -->
		select * from t_member
	</select>
	
	<select id="getMemberList2" resultType="MemberVO"> <!-- getMemberList 호출 시 실행 -->
		select * from (
			select rownum as recNum, id, pwd, name, email, joindate 
			from (
				select id, pwd, name, email, joindate from t_member order by joindate desc
				)
			)
			where recnum between #{skip} and #{end}
			<!-- where recnum between 1 and 10 -->
	</select>
	
	<select id="getCount" resultType="int">
		select count(*) from t_member
	</select>
	
	<!-- 공동 사용된 sql query -->
	<sql id="search">
		
	</sql>
	
	<!-- 회원 조회 -->
	<!-- 전달받는 매개 변수, 반환하는 자료형 -->
	<select id="getMemberView" resultType="com.spring.springbootJsp.member.vo.MemberVO">
		select * from t_member where id = #{id}
	</select>
	
	<!-- 회원 등록 -->
	<!-- 1개 이상 전달받는 매개변수 -->
	<select id="insertMember" parameterType="com.spring.springbootJsp.member.vo.MemberVO">
		insert into t_member (id, pwd, name, email)
				values(#{id}, #{pwd}, #{name}, #{email})
	</select>
	
	<!-- 회원 삭제 -->
	<select id = "deleteMember">
		delete from t_member where id = #{id}
	</select>
	
	<!-- 회원 수정 -->
	<select id = "updateMember" parameterType="com.spring.springbootJsp.member.vo.MemberVO">
		update t_member
		set pwd = #{pwd}, name = #{name}, email = #{email}
		where id = #{id}
	</select>
	
	<!-- 회원 아이디 채크 -->
	<select id="idCheck" resultType="string">
		select decode( count(*), 1, 'true', 'false') as isCheck
		from t_member where id=#{id}
	</select>
	<!-- 여기서 sql문장 끝에 ; 붙이면 안됨! -->
	
	<!-- Mybatis 동적 SQL문 -->
	<!-- select * from t_member where name=#{name} order by joindate desc -->
	<select id="getMemberListIf" resultType="MemberVO">
		select * from t_member
		<where>
		
			<!-- if 사용 -->
			<!-- if 조건(test결과)에 따라 처리 --> <!-- test == true or false -->
			<!-- 
			<if test="name !='' and name != null">name=#{name}</if>
			<if test="email !='' and email != null">and email=#{email}</if>
			 -->
			 
			<!-- choose 사용 -->
			<choose>
				<when test="name !='' and name != null and email !='' and email != null">
					name=#{name} and email=#{email}
				</when>
				<when test="name !='' and name != null">
					name=#{name}
				</when>
				<when test="email !='' and email != null">
					email=#{email}
				</when>
				<when test="id !='' and id != null">
					id like '%#{id}%' <!-- 안됨 -->
				</when>
				<otherwise>name like '%홍%'</otherwise>
			</choose>
		</where>
		order by joindate desc
	</select>
	
	<!-- include -->
	<sql id="selectAll">
		select * from t_member
	</sql>
	
	
	<select id="getForEachSelect" parameterType="java.util.Map" resultType="MemberVO">
		<!-- select * from t_member where name in ('홍길동', '동순이',...) -->
		
		<include refid="selectAll"/>  <!-- select * from t_member -->
		
		where name in
			<!-- 받은 리스트를 ('홍길동', '동순이',...) 이 형식으로 만들어줌 -->
			<foreach item="item" collection="list" open="(" separator="," close=")">
				#{item}
			</foreach>
	</select>
	

	<select id="setForEachInsert" parameterType="java.util.Map">
		<foreach item="item" collection="list" open="insert all" separator=" " close="select * from dual">
			into t_member(id, pwd, name, email)
			values
			(
				#{item.id},
				#{item.pwd},
				#{item.name},
				#{item.email}
			)
		</foreach>
	</select>

	<!-- insert, update, delete 사용시 반환 값은 성공한 행의 개수 반환 (없다면 0) -->
	<!-- Oracle 적용. 전체 문장을 반복 -->
	<!-- insert가 작동해서 데이터가 들어는 가지만 결국 에러남 select로 하면 괜찮음 -->
<!--
	<insert id="setForEachInsert" parameterType="java.util.Map">
		<foreach item="item" collection="list" open="insert all" separator=" " close="select * from dual">
			into t_member(id, pwd, name, email)
			values
			(
				#{item.id},
				#{item.pwd},
				#{item.name},
				#{item.email}
			)
		</foreach>
	</insert>
 -->
<!-- MySQL/MariaDB 적용.  오라클에서 insert의 values를 반복해서 사용할 경우 오류
	<insert id="setForEachInsert" parameterType="java.util.Map">
		insert into t_member(id, pwd, name, email)
		values
		<foreach item="item" collection="list">
			(
				#{item.id},
				#{item.pwd},
				#{item.name},
				#{item.email}
			)
		</foreach>
	</insert>
 -->
	
</mapper>